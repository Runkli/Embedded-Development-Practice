
UserModule.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  00000252  000002c6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000252  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000002d2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000304  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000060  00000000  00000000  00000340  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c58  00000000  00000000  000003a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000091a  00000000  00000000  00000ff8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000049f  00000000  00000000  00001912  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000100  00000000  00000000  00001db4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004b5  00000000  00000000  00001eb4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000442  00000000  00000000  00002369  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  000027ab  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	ea c0       	rjmp	.+468    	; 0x1da <__vector_1>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 e5       	ldi	r30, 0x52	; 82
  a0:	f2 e0       	ldi	r31, 0x02	; 2
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ac 30       	cpi	r26, 0x0C	; 12
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	cb d0       	rcall	.+406    	; 0x24a <main>
  b4:	cc c0       	rjmp	.+408    	; 0x24e <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <keypad_to_char>:
	}
	for(i = 0; str[i]!='\0' && i < 20; i++) {
		data_LCD(str[i]);
	}
	
}
  b8:	83 b3       	in	r24, 0x13	; 19
  ba:	8e 70       	andi	r24, 0x0E	; 14
  bc:	82 30       	cpi	r24, 0x02	; 2
  be:	31 f0       	breq	.+12     	; 0xcc <keypad_to_char+0x14>
  c0:	84 30       	cpi	r24, 0x04	; 4
  c2:	11 f0       	breq	.+4      	; 0xc8 <keypad_to_char+0x10>
  c4:	80 e0       	ldi	r24, 0x00	; 0
  c6:	03 c0       	rjmp	.+6      	; 0xce <keypad_to_char+0x16>
  c8:	81 e0       	ldi	r24, 0x01	; 1
  ca:	01 c0       	rjmp	.+2      	; 0xce <keypad_to_char+0x16>
  cc:	82 e0       	ldi	r24, 0x02	; 2
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	38 c0       	rjmp	.+112    	; 0x142 <keypad_to_char+0x8a>
  d2:	45 b3       	in	r20, 0x15	; 21
  d4:	69 2f       	mov	r22, r25
  d6:	70 e0       	ldi	r23, 0x00	; 0
  d8:	6c 5f       	subi	r22, 0xFC	; 252
  da:	7f 4f       	sbci	r23, 0xFF	; 255
  dc:	21 e0       	ldi	r18, 0x01	; 1
  de:	30 e0       	ldi	r19, 0x00	; 0
  e0:	f9 01       	movw	r30, r18
  e2:	02 c0       	rjmp	.+4      	; 0xe8 <keypad_to_char+0x30>
  e4:	ee 0f       	add	r30, r30
  e6:	ff 1f       	adc	r31, r31
  e8:	6a 95       	dec	r22
  ea:	e2 f7       	brpl	.-8      	; 0xe4 <keypad_to_char+0x2c>
  ec:	bf 01       	movw	r22, r30
  ee:	ae 2f       	mov	r26, r30
  f0:	5e 2f       	mov	r21, r30
  f2:	50 95       	com	r21
  f4:	45 23       	and	r20, r21
  f6:	45 bb       	out	0x15, r20	; 21
  f8:	ef e0       	ldi	r30, 0x0F	; 15
  fa:	f7 e2       	ldi	r31, 0x27	; 39
  fc:	31 97       	sbiw	r30, 0x01	; 1
  fe:	f1 f7       	brne	.-4      	; 0xfc <keypad_to_char+0x44>
 100:	00 c0       	rjmp	.+0      	; 0x102 <keypad_to_char+0x4a>
 102:	00 00       	nop
 104:	43 b3       	in	r20, 0x13	; 19
 106:	e8 2f       	mov	r30, r24
 108:	f0 e0       	ldi	r31, 0x00	; 0
 10a:	31 96       	adiw	r30, 0x01	; 1
 10c:	02 c0       	rjmp	.+4      	; 0x112 <keypad_to_char+0x5a>
 10e:	22 0f       	add	r18, r18
 110:	33 1f       	adc	r19, r19
 112:	ea 95       	dec	r30
 114:	e2 f7       	brpl	.-8      	; 0x10e <keypad_to_char+0x56>
 116:	50 e0       	ldi	r21, 0x00	; 0
 118:	42 23       	and	r20, r18
 11a:	53 23       	and	r21, r19
 11c:	20 95       	com	r18
 11e:	30 95       	com	r19
 120:	42 17       	cp	r20, r18
 122:	53 07       	cpc	r21, r19
 124:	21 f4       	brne	.+8      	; 0x12e <keypad_to_char+0x76>
 126:	25 b3       	in	r18, 0x15	; 21
 128:	a2 2b       	or	r26, r18
 12a:	a5 bb       	out	0x15, r26	; 21
 12c:	0c c0       	rjmp	.+24     	; 0x146 <keypad_to_char+0x8e>
 12e:	ef e0       	ldi	r30, 0x0F	; 15
 130:	f7 e2       	ldi	r31, 0x27	; 39
 132:	31 97       	sbiw	r30, 0x01	; 1
 134:	f1 f7       	brne	.-4      	; 0x132 <keypad_to_char+0x7a>
 136:	00 c0       	rjmp	.+0      	; 0x138 <keypad_to_char+0x80>
 138:	00 00       	nop
 13a:	25 b3       	in	r18, 0x15	; 21
 13c:	62 2b       	or	r22, r18
 13e:	65 bb       	out	0x15, r22	; 21
 140:	9f 5f       	subi	r25, 0xFF	; 255
 142:	94 30       	cpi	r25, 0x04	; 4
 144:	30 f2       	brcs	.-116    	; 0xd2 <keypad_to_char+0x1a>
 146:	f0 e1       	ldi	r31, 0x10	; 16
 148:	8f 9f       	mul	r24, r31
 14a:	90 01       	movw	r18, r0
 14c:	11 24       	eor	r1, r1
 14e:	89 2f       	mov	r24, r25
 150:	82 2b       	or	r24, r18
 152:	08 95       	ret

00000154 <send_LCD>:
 154:	83 b9       	out	0x03, r24	; 3
 156:	82 b3       	in	r24, 0x12	; 18
 158:	80 68       	ori	r24, 0x80	; 128
 15a:	82 bb       	out	0x12, r24	; 18
 15c:	8f e8       	ldi	r24, 0x8F	; 143
 15e:	91 e0       	ldi	r25, 0x01	; 1
 160:	01 97       	sbiw	r24, 0x01	; 1
 162:	f1 f7       	brne	.-4      	; 0x160 <send_LCD+0xc>
 164:	00 c0       	rjmp	.+0      	; 0x166 <send_LCD+0x12>
 166:	00 00       	nop
 168:	82 b3       	in	r24, 0x12	; 18
 16a:	8f 77       	andi	r24, 0x7F	; 127
 16c:	82 bb       	out	0x12, r24	; 18
 16e:	8f e8       	ldi	r24, 0x8F	; 143
 170:	91 e0       	ldi	r25, 0x01	; 1
 172:	01 97       	sbiw	r24, 0x01	; 1
 174:	f1 f7       	brne	.-4      	; 0x172 <send_LCD+0x1e>
 176:	00 c0       	rjmp	.+0      	; 0x178 <send_LCD+0x24>
 178:	00 00       	nop
 17a:	08 95       	ret

0000017c <command_LCD>:
 17c:	92 b3       	in	r25, 0x12	; 18
 17e:	9f 7d       	andi	r25, 0xDF	; 223
 180:	92 bb       	out	0x12, r25	; 18
 182:	e8 cf       	rjmp	.-48     	; 0x154 <send_LCD>
 184:	08 95       	ret

00000186 <configure>:
 186:	86 e0       	ldi	r24, 0x06	; 6
 188:	80 93 9d 00 	sts	0x009D, r24	; 0x80009d <__TEXT_REGION_LENGTH__+0x7e009d>
 18c:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 190:	83 e3       	ldi	r24, 0x33	; 51
 192:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 196:	88 e9       	ldi	r24, 0x98	; 152
 198:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
 19c:	78 94       	sei
 19e:	8f ef       	ldi	r24, 0xFF	; 255
 1a0:	82 b9       	out	0x02, r24	; 2
 1a2:	80 ee       	ldi	r24, 0xE0	; 224
 1a4:	81 bb       	out	0x11, r24	; 17
 1a6:	88 e3       	ldi	r24, 0x38	; 56
 1a8:	e9 df       	rcall	.-46     	; 0x17c <command_LCD>
 1aa:	8c e0       	ldi	r24, 0x0C	; 12
 1ac:	e7 df       	rcall	.-50     	; 0x17c <command_LCD>
 1ae:	86 e0       	ldi	r24, 0x06	; 6
 1b0:	e5 df       	rcall	.-54     	; 0x17c <command_LCD>
 1b2:	80 ef       	ldi	r24, 0xF0	; 240
 1b4:	84 bb       	out	0x14, r24	; 20
 1b6:	85 bb       	out	0x15, r24	; 21
 1b8:	81 e0       	ldi	r24, 0x01	; 1
 1ba:	89 bf       	out	0x39, r24	; 57
 1bc:	08 95       	ret

000001be <clear_LCD>:
 1be:	81 e0       	ldi	r24, 0x01	; 1
 1c0:	dd df       	rcall	.-70     	; 0x17c <command_LCD>
 1c2:	8f e0       	ldi	r24, 0x0F	; 15
 1c4:	97 e2       	ldi	r25, 0x27	; 39
 1c6:	01 97       	sbiw	r24, 0x01	; 1
 1c8:	f1 f7       	brne	.-4      	; 0x1c6 <clear_LCD+0x8>
 1ca:	00 c0       	rjmp	.+0      	; 0x1cc <clear_LCD+0xe>
 1cc:	00 00       	nop
 1ce:	08 95       	ret

000001d0 <data_LCD>:
 1d0:	92 b3       	in	r25, 0x12	; 18
 1d2:	90 62       	ori	r25, 0x20	; 32
 1d4:	92 bb       	out	0x12, r25	; 18
 1d6:	be cf       	rjmp	.-132    	; 0x154 <send_LCD>
 1d8:	08 95       	ret

000001da <__vector_1>:
 1da:	1f 92       	push	r1
 1dc:	0f 92       	push	r0
 1de:	0f b6       	in	r0, 0x3f	; 63
 1e0:	0f 92       	push	r0
 1e2:	11 24       	eor	r1, r1
 1e4:	0b b6       	in	r0, 0x3b	; 59
 1e6:	0f 92       	push	r0
 1e8:	2f 93       	push	r18
 1ea:	3f 93       	push	r19
 1ec:	4f 93       	push	r20
 1ee:	5f 93       	push	r21
 1f0:	6f 93       	push	r22
 1f2:	7f 93       	push	r23
 1f4:	8f 93       	push	r24
 1f6:	9f 93       	push	r25
 1f8:	af 93       	push	r26
 1fa:	bf 93       	push	r27
 1fc:	ef 93       	push	r30
 1fe:	ff 93       	push	r31
 200:	de df       	rcall	.-68     	; 0x1be <clear_LCD>
 202:	5a df       	rcall	.-332    	; 0xb8 <keypad_to_char>
 204:	28 2f       	mov	r18, r24
 206:	2f 70       	andi	r18, 0x0F	; 15
 208:	82 95       	swap	r24
 20a:	8f 70       	andi	r24, 0x0F	; 15
 20c:	30 e0       	ldi	r19, 0x00	; 0
 20e:	f9 01       	movw	r30, r18
 210:	ee 0f       	add	r30, r30
 212:	ff 1f       	adc	r31, r31
 214:	e2 0f       	add	r30, r18
 216:	f3 1f       	adc	r31, r19
 218:	e0 50       	subi	r30, 0x00	; 0
 21a:	ff 4f       	sbci	r31, 0xFF	; 255
 21c:	e8 0f       	add	r30, r24
 21e:	f1 1d       	adc	r31, r1
 220:	80 81       	ld	r24, Z
 222:	d6 df       	rcall	.-84     	; 0x1d0 <data_LCD>
 224:	ff 91       	pop	r31
 226:	ef 91       	pop	r30
 228:	bf 91       	pop	r27
 22a:	af 91       	pop	r26
 22c:	9f 91       	pop	r25
 22e:	8f 91       	pop	r24
 230:	7f 91       	pop	r23
 232:	6f 91       	pop	r22
 234:	5f 91       	pop	r21
 236:	4f 91       	pop	r20
 238:	3f 91       	pop	r19
 23a:	2f 91       	pop	r18
 23c:	0f 90       	pop	r0
 23e:	0b be       	out	0x3b, r0	; 59
 240:	0f 90       	pop	r0
 242:	0f be       	out	0x3f, r0	; 63
 244:	0f 90       	pop	r0
 246:	1f 90       	pop	r1
 248:	18 95       	reti

0000024a <main>:
	PORTD &= ~(1<<7); // turn E pulse off
	_delay_us(200);
}

int main(void) {
	configure();
 24a:	9d df       	rcall	.-198    	; 0x186 <configure>
 24c:	ff cf       	rjmp	.-2      	; 0x24c <main+0x2>

0000024e <_exit>:
 24e:	f8 94       	cli

00000250 <__stop_program>:
 250:	ff cf       	rjmp	.-2      	; 0x250 <__stop_program>
